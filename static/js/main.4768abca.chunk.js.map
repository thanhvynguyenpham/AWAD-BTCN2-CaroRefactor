{"version":3,"sources":["logo.svg","components/Square/index.js","components/Board/index.js","components/Game/index.js","App.js","reportWebVitals.js","index.js"],"names":["Square","props","className","winCell","onClick","value","Board","renderSquare","i","squares","winLine","includes","size","board","row","j","push","renderBoard","calculateWinner","lines","line","Array","from","length","_","k","console","log","a","b","c","d","e","winner","isDraw","Game","useState","fill","history","setHistory","stepNumber","setStepNumber","xIsNext","setXIsNext","isAscending","setIsAscending","status","current","moves","map","step","move","x","lastPosition","y","Math","floor","desc","jumpTo","reverse","newHistory","slice","concat","handleClick","this","state","handleSorting","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"8JAAe,I,mBCUAA,EATA,SAACC,GACd,IAAMC,EAAYD,EAAME,QAAU,mBAAqB,SACvD,OACE,wBAAQD,UAAWA,EAAWE,QAASH,EAAMG,QAA7C,SACGH,EAAMI,SCyBEC,EA3BD,SAACL,GACb,SAASM,EAAaC,GACpB,OACE,cAAC,EAAD,CAEEH,MAAOJ,EAAMQ,QAAQD,GACrBJ,QAAS,kBAAMH,EAAMG,QAAQI,IAC7BL,QAASF,EAAMS,SAAWT,EAAMS,QAAQC,SAASH,IAH5CA,GAoBX,OAZA,SAAqBI,GAEnB,IADA,IAAIC,EAAQ,GACHL,EAAI,EAAGA,EAAII,EAAMJ,IAAK,CAE7B,IADA,IAAIM,EAAM,GACDC,EAAI,EAAGA,EAAIH,EAAMG,IACxBD,EAAIE,KAAKT,EAAaC,EAAII,EAAOG,IAEnCF,EAAMG,KAAK,qBAAKd,UAAU,YAAf,SAA4BY,KAEzC,OAAO,8BAAMD,IAGRI,CAAYhB,EAAMW,OCxB3B,SAASM,EAAgBT,GAGvB,IAFA,IAAIU,EAAQ,GADoB,WAGvBX,GACP,IAAIY,EACJA,EAAOC,MAAMC,KAAK,CAAEC,OAAQ,IAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAIjB,KAC/CW,EAAMH,KAAKI,IAHJZ,EAAI,EAAGA,EAAI,GAAOA,GAAK,EAAI,EAA3BA,GAMT,IAAK,IAAIA,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAE1B,IADA,IAAIY,EAAO,GACFL,EAAI,EAAGA,EAAI,EAAGA,IACrBK,EAAKJ,KAAKR,EAAQ,EAAJO,GAEhBI,EAAMH,KAAKI,GAGbD,EAAMH,KAAK,CAAC,EAAG,EAAG,GAAI,GAAI,KAC1BG,EAAMH,KAAK,CAAC,EAAG,EAAG,GAAI,GAAI,KAC1BU,QAAQC,IAAIR,GACZ,IAAK,IAAIX,EAAI,EAAGA,EAAIW,EAAMI,OAAQf,IAAK,CACrC,kBAAwBW,EAAMX,GAA9B,GAAOoB,EAAP,KAAUC,EAAV,KAAaC,EAAb,KAAgBC,EAAhB,KAAmBC,EAAnB,KACA,GACEvB,EAAQmB,IACRnB,EAAQmB,KAAOnB,EAAQoB,IACvBpB,EAAQmB,KAAOnB,EAAQqB,IACvBrB,EAAQmB,KAAOnB,EAAQsB,IACvBtB,EAAQmB,KAAOnB,EAAQuB,GAEvB,MAAO,CACLC,OAAQxB,EAAQmB,GAChBR,KAAMD,EAAMX,GACZ0B,QAAQ,GAId,OAAIzB,EAAQE,SAAS,MACZ,CACLsB,OAAQ,KACRb,KAAM,KACNc,QAAQ,GAGL,CACLD,OAAQ,KACRb,KAAM,KACNc,QAAQ,GAIZ,IAyFeC,EAzFF,WACX,MAA8BC,mBAAS,CAAC,CAAE3B,QAASY,MAAM,IAAIgB,KAAK,SAAlE,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAoCH,mBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACA,EAA8BL,oBAAS,GAAvC,mBAAOM,EAAP,KAAgBC,EAAhB,KACA,EAAwBP,mBAAS,GAAjC,mBAAOxB,EAAP,KACA,GADA,KACsCwB,oBAAS,IAA/C,mBAAOQ,EAAP,KAAoBC,EAApB,KA+BA,IAuBIC,EAvBEC,EAAUT,EAAQE,GAClBP,EAASf,EAAgB6B,EAAQtC,SAEnCuC,EAAQV,EAAQW,KAAI,SAACC,EAAMC,GAC7B,IAAMC,EAAKF,EAAKG,aAAezC,EAAQ,EACjC0C,EAAIC,KAAKC,MAAMN,EAAKG,aAAezC,GAAQ,EAC3C6C,EAAON,EACT,eAAiBA,EAAjB,WAA4BC,EAA5B,aAAkCE,EAAlC,KACA,mBACJ,OACE,6BACE,wBACElD,QAAS,kBArBjB,SAAgB8C,GACdT,EAAcS,GACdP,EAAWO,EAAO,IAAM,GAmBHQ,CAAOP,IACtBjD,UAAWiD,IAASX,GAAc,WAFpC,SAIGiB,KALIN,MAsBb,OAZKP,GACHI,EAAMW,UAINb,EADEb,EAAOA,OACA,WAAaA,EAAOA,OACpBA,EAAOC,OACP,OAEA,iBAAmBQ,EAAU,IAAM,KAI5C,sBAAKxC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAAC,EAAD,CACEO,QAASsC,EAAQtC,QACjBL,QAAS,SAACI,GAAD,OAlEjB,SAAqBA,GACnB,IAAMoD,EAAatB,EAAQuB,MAAM,EAAGrB,EAAa,GAE3C/B,EADUmD,EAAWA,EAAWrC,OAAS,GACvBd,QAAQoD,QAC5B3C,EAAgBT,GAASwB,QAAUxB,EAAQD,KAG/CC,EAAQD,GAAKkC,EAAU,IAAM,IAC7BH,EACEqB,EAAWE,OAAO,CAChB,CACErD,QAASA,EACT4C,aAAc7C,MAIpBiC,EAAcmB,EAAWrC,QACzBoB,GAAYD,IAiDUqB,CAAYvD,IAC5BI,KAAMA,EACNF,QAASuB,EAAOb,SAGpB,sBAAKlB,UAAU,YAAf,UACE,8BAAM4C,IACN,wBAAQ1C,QAAS,kBAjDvB,WACE,IAAM0C,EAASkB,KAAKC,MAAMrB,YAC1BC,GAAgBC,GA+CWoB,IAAvB,SACGtB,EAAc,MAAQ,QAEzB,6BAAKI,WChIEmB,MAJf,WACE,OAAO,cAAC,EAAD,KCOMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDZ,K","file":"static/js/main.4768abca.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nconst Square = (props) => {\r\n  const className = props.winCell ? \"square highlight\" : \"square\";\r\n  return (\r\n    <button className={className} onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Square;\r\n","import React from \"react\";\r\nimport Square from \"../Square\";\r\n\r\nconst Board = (props) => {\r\n  function renderSquare(i) {\r\n    return (\r\n      <Square\r\n        key={i}\r\n        value={props.squares[i]}\r\n        onClick={() => props.onClick(i)}\r\n        winCell={props.winLine && props.winLine.includes(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  function renderBoard(size) {\r\n    let board = [];\r\n    for (var i = 0; i < size; i++) {\r\n      let row = [];\r\n      for (var j = 0; j < size; j++) {\r\n        row.push(renderSquare(i * size + j));\r\n      }\r\n      board.push(<div className=\"board-row\">{row}</div>);\r\n    }\r\n    return <div>{board}</div>;\r\n  }\r\n\r\n  return renderBoard(props.size);\r\n};\r\n\r\nexport default Board;\r\n","import React, { useState } from \"react\";\r\nimport Board from \"../Board\";\r\n\r\nfunction calculateWinner(squares) {\r\n  let lines = [];\r\n  // rows\r\n  for (let i = 0; i < 5 * 5; i += 5) {\r\n    let line = [];\r\n    line = Array.from({ length: 5 }, (_, k) => k + i);\r\n    lines.push(line);\r\n  }\r\n  // cols\r\n  for (let i = 0; i < 5; i++) {\r\n    let line = [];\r\n    for (let j = 0; j < 5; j++) {\r\n      line.push(i + j * 5);\r\n    }\r\n    lines.push(line);\r\n  }\r\n  // cross\r\n  lines.push([0, 6, 12, 18, 24]);\r\n  lines.push([4, 8, 12, 16, 20]);\r\n  console.log(lines);\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c, d, e] = lines[i];\r\n    if (\r\n      squares[a] &&\r\n      squares[a] === squares[b] &&\r\n      squares[a] === squares[c] &&\r\n      squares[a] === squares[d] &&\r\n      squares[a] === squares[e]\r\n    ) {\r\n      return {\r\n        winner: squares[a],\r\n        line: lines[i],\r\n        isDraw: false,\r\n      };\r\n    }\r\n  }\r\n  if (squares.includes(null)) {\r\n    return {\r\n      winner: null,\r\n      line: null,\r\n      isDraw: false,\r\n    };\r\n  }\r\n  return {\r\n    winner: null,\r\n    line: null,\r\n    isDraw: true,\r\n  };\r\n}\r\n\r\nconst Game = () => {\r\n  const [history, setHistory] = useState([{ squares: Array(25).fill(null) }]);\r\n  const [stepNumber, setStepNumber] = useState(0);\r\n  const [xIsNext, setXIsNext] = useState(true);\r\n  const [size, setSize] = useState(5);\r\n  const [isAscending, setIsAscending] = useState(true);\r\n\r\n  function handleClick(i) {\r\n    const newHistory = history.slice(0, stepNumber + 1);\r\n    const current = newHistory[newHistory.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares).winner || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = xIsNext ? \"X\" : \"O\";\r\n    setHistory(\r\n      newHistory.concat([\r\n        {\r\n          squares: squares,\r\n          lastPosition: i,\r\n        },\r\n      ])\r\n    );\r\n    setStepNumber(newHistory.length);\r\n    setXIsNext(!xIsNext);\r\n  }\r\n\r\n  function jumpTo(step) {\r\n    setStepNumber(step);\r\n    setXIsNext(step % 2 === 0);\r\n  }\r\n  function handleSorting() {\r\n    const status = this.state.isAscending;\r\n    setIsAscending(!status);\r\n  }\r\n\r\n  const current = history[stepNumber];\r\n  const winner = calculateWinner(current.squares);\r\n\r\n  let moves = history.map((step, move) => {\r\n    const x = (step.lastPosition % size) + 1;\r\n    const y = Math.floor(step.lastPosition / size) + 1;\r\n    const desc = move\r\n      ? \"Go to move #\" + move + `(${x}, ${y})`\r\n      : \"Go to game start\";\r\n    return (\r\n      <li key={move}>\r\n        <button\r\n          onClick={() => jumpTo(move)}\r\n          className={move === stepNumber && \"selected\"}\r\n        >\r\n          {desc}\r\n        </button>\r\n      </li>\r\n    );\r\n  });\r\n  if (!isAscending) {\r\n    moves.reverse();\r\n  }\r\n  let status;\r\n  if (winner.winner) {\r\n    status = \"Winner: \" + winner.winner;\r\n  } else if (winner.isDraw) {\r\n    status = \"Draw\";\r\n  } else {\r\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"game-board\">\r\n        <Board\r\n          squares={current.squares}\r\n          onClick={(i) => handleClick(i)}\r\n          size={size}\r\n          winLine={winner.line}\r\n        />\r\n      </div>\r\n      <div className=\"game-info\">\r\n        <div>{status}</div>\r\n        <button onClick={() => handleSorting()}>\r\n          {isAscending ? \"Des\" : \"Asc\"}\r\n        </button>\r\n        <ol>{moves}</ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport Game from \"./components/Game\";\r\n\r\nfunction App() {\r\n  return <Game />;\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}